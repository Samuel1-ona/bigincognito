name: Cairo Contract Check

on:
  push:
    branches: [main]
    paths:
      - 'contract_/**'
  pull_request:
    branches: [main]
    paths:
      - 'contract_/**'
  workflow_dispatch:

jobs:
  check-fmt:
    runs-on: ubuntu-latest
    name: Cairo formatting
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - uses: software-mansion/setup-scarb@v1
        with:
          tool-versions: contract_/.tool-versions
      - name: Check Scarb Formatting
        run: scarb fmt --check
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Install ASDF
        uses: asdf-vm/actions/setup@v2

      - name: Install Scarb
        run: |
          git clone https://github.com/software-mansion/asdf-scarb.git ~/.asdf/plugins/scarb
          asdf install scarb 2.11.2
          asdf global scarb 2.11.2

      - name: Install snforge via cargo
        run: |
          asdf plugin add starknet-foundry
          asdf install starknet-foundry 0.38.3
          asdf global starknet-foundry 0.38.3

      - name: Verify installations
        run: |
          scarb --version
          which snforge || echo "snforge not found in PATH"
          ~/.local/bin/snforge --version || echo "snforge binary not executable"

      - name: Check formatting
        run: |
          cd contract_
          scarb fmt --check

      - name: Run tests
        run: |
          export PATH=$PATH:/root/.local/bin
          cd contract_
          snforge test

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Scarb.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
